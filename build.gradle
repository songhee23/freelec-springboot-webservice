buildscript {

/* ext라는 키워드는 build.gradle에서 사용하는 전역변수를 설정하겠다는 의미.
* 여기서 springBootVersion 전역변수를 생성하고 그 값을 '2.1.9.REALEASE'로 하겠다는 의미
* 즉, spring-boot-gradle-plugin라는 스프링 부트 그레이들 플러그인의 2.1.9.REALEASE를 의존성으로 받겠다는 의미 */
    ext {
        springBootVersion = '2.2.0.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
/* 요 4개의 플러그인은 자바와 스프링 부트를 사용하기 위한 필수 플러그인임 */

group 'com.songhee.test'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}
/* repositories는 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 지정합니다.
기본적으로 mavenCentral을 많이 사용하지만, 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용한다.

mavenCentral은 이전부터 많이 사용하는 저장소이지만, 본인이 만든 라이브러리를 업로드 하기 위한 과정이 복잡해짐에 따라
최근에 jcenter를 많이 쓴다고 함. 최근에 개발자들의 라이브러리가 jcenter로 이동하고 있음 그래서 둘다 사용
*/

dependencies {

    implementation('org.springframework.boot:spring-boot-starter-web')
    // implementation('org.projectlombok:lombok')
    implementation 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    /*
    1) prferences.. > Enable annotation processing 체크
    2) lombok error: variable name not initialized in the default constructor private final String name;
    생성자가 안만들어지고
    이런 오류가 나서 확인해보니 gradle 5부터는 어노테이션을 구별해서 추가해줘야 한다고 하네요.

    build.gradle에 기존 디펜던시 제거 후 아래 내용으로 업데이트 해주면 해결.
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    */
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    implementation('com.h2database:h2')

    //implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.session:spring-session-jdbc')

    implementation("org.mariadb.jdbc:mariadb-java-client")

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test")
}
/* dependencies는 프로젝트 개발에 필요한 의존성들을 선언하는 곳 */
/* Q. compile은 그레이들 버전 4에서가능하다. 나는 그레이들 버전 7이기 때문에 comile->implimentation,
testCompile->testImplimentation으로 수정하였다.
 */

test {
    useJUnitPlatform()
}